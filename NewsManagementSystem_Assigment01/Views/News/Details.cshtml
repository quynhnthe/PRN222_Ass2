@model NewsManagementSystem_Assigment01.Models.NewsArticle
@using System.Security.Claims

<div class="container mt-5">
    <div class="card shadow-lg border-0 rounded-3">
        <div class="card-header bg-primary text-white text-center">
            <h2 class="mb-0">@Model.NewsTitle</h2>
        </div>
        <div class="card-body p-4">
            <h5 class="text-muted">@Model.Headline</h5>

            <div class="row mt-3">
                <div class="col-md-6">
                    <p><strong>Created Date:</strong> @Model.CreatedDate?.ToString("dd/MM/yyyy HH:mm")</p>
                    <p><strong>Last Modified:</strong> @Model.ModifiedDate?.ToString("dd/MM/yyyy HH:mm")</p>
                    <p><strong>Status:</strong> @(Model.NewsStatus == true ? "Published" : "Draft")</p>
                </div>
                <div class="col-md-6">
                    <p><strong>News Source:</strong> @Model.NewsSource</p>
                    <p><strong>Category:</strong> @Model?.Category?.CategoryName</p>
                    <p><strong>Created By:</strong> @Model.CreatedBy?.AccountName</p>
                </div>
            </div>

            <hr>
            <h5 class="mt-3">News Content</h5>
            <p class="text-justify">@Model.NewsContent</p>
        </div>

        <div class="card-footer text-center">
            @if (User.FindFirstValue(ClaimTypes.Role) == "1")
            {
                <a asp-action="Edit" asp-route-id="@Model?.NewsArticleId" class="btn btn-warning mx-2">Edit</a>
            }
            <a asp-action="Index" asp-controller="Home" class="btn btn-secondary">Back to List</a>
        </div>
    </div>
    <h3>Comments</h3>
    <div id="commentSection">
        @foreach (var comment in Model.Comments)
        {
            <p><strong>@comment.User.AccountName:</strong> @comment.Content</p>
        }
    </div>

    <input id="commentInput" type="text" placeholder="Write a comment..." class="form-control mt-2" />
    <button id="sendComment" class="btn btn-primary mt-2">Send</button>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.9/signalr.min.js"></script>
@* <script>
    const postId = @Model.NewsArticleId;
    const userId = "@User.FindFirstValue(ClaimTypes.NameIdentifier)";

    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/commentHub")
        .withAutomaticReconnect()
        .build();

    connection.start().then(() => {
        connection.invoke("JoinPostGroup", postId);
    });

    connection.on("ReceiveComment", (user, message) => {
        document.getElementById("commentSection").innerHTML += `<p><strong>${user}:</strong> ${message}</p>`;
    });

    document.getElementById("sendComment").addEventListener("click", async () => {
        const content = document.getElementById("commentInput").value;
        if (!content.trim()) return;

        await fetch("/api/comments", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ postId, userId, content })
        });

        document.getElementById("commentInput").value = "";
    });
</script> *@

